# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

import distutils.spawn
import re
import os
import configparser

TAPPAS_REPOSITORY_ROOT = os.path.realpath(os.path.dirname(__file__))
DOC_CONFIG_FILE_PATH = os.path.join(TAPPAS_REPOSITORY_ROOT, '..', 'tools', 'build_tools', 'tappas_sphinx', '_source', 'config')

def _tex_escape(text):
    conversion_dict = {
        '&': r'\&',
        '%': r'\%',
        '$': r'\$',
        '#': r'\#',
        '_': r'\_',
        '{': r'\{',
        '}': r'\}',
        '~': r'\textasciitilde{}',
        '^': r'\^{}',
        '\\': r'\textbackslash{}',
        '<': r'\textless{}',
        '>': r'\textgreater{}',
    }
    sorted_keys = sorted(conversion_dict.keys(), key=(lambda item: -len(item)))
    regex = re.compile('|'.join(re.escape(key) for key in sorted_keys))
    return regex.sub(lambda match: conversion_dict[match.group()], text)

def _read_config_file():
    if not os.path.isfile(DOC_CONFIG_FILE_PATH):
        raise FileNotFoundError(f"{DOC_CONFIG_FILE_PATH} does not exist. Copy it from {DOC_CONFIG_FILE_PATH}")

    config = configparser.ConfigParser()
    config.read(DOC_CONFIG_FILE_PATH)
    return config

def _get_doc_config(config_key, should_escape_tex=False):
    if _get_doc_config.config is None:
        _get_doc_config.config = _read_config_file()
        
    config = _get_doc_config.config
    
    doc_key = 'doc'
    if (doc_key not in config) or (config_key not in config[doc_key]):
        return None
    config_value = config[doc_key][config_key]
    # Don't allow empty values
    if re.match(r'^\s*$', config[doc_key][config_key]) is not None:
        return None
    if should_escape_tex:
        return _tex_escape(config_value)
    return config_value


_get_doc_config.config = None


latex_watermark_text = None
latex_watermark_preamble = ''
if latex_watermark_text is not None:
    latex_watermark_preamble = r'''
            \usepackage{draftwatermark}
            \SetWatermarkText{''' + latex_watermark_text + r'''}
            \SetWatermarkScale{0.4}
            \SetWatermarkLightness{0.9}
    '''

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))


# -- Project information -----------------------------------------------------

project = 'Tappas'
copyright = '2024, Hailo Technologies'
author = 'Hailo Technologies'

# The short X.Y version
version = ''
# The full version, including alpha/beta/rc tags
release = _get_doc_config('forced_version')
today_fmt = '%-d %B %Y'


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'breathe',
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.mathjax',
    'sphinx.ext.viewcode',
]

if distutils.spawn.find_executable('rsvg-convert'):
    extensions.append('sphinxcontrib.rsvgconverter')

# Add any paths that contain templates here, relative to this directory.
templates_path = ['tappas_sphinx/_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['tappas_venv']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = 'sphinx_rtd_theme'

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}
html_show_sourcelink = False

# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'Tappasdoc'


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    'papersize': 'a4paper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    'preamble': latex_watermark_preamble + r'''
        \usepackage{tabu}
        \addto\captionsenglish{\renewcommand{\contentsname}{Table of Contents}}
        \usepackage{tikz}
        \usepackage{fontspec}
        \usepackage{graphicx}
        \usepackage{enumitem}
        \usepackage[labelsep=period]{caption}
        \usepackage{titlesec}
        \usepackage{xstring}
        \usepackage{etoolbox}
        \usepackage{geometry}
        \setsansfont[Ligatures=TeX,Scale=MatchLowercase]{Exo 2}
        \setmonofont[Ligatures=TeX,Scale=MatchLowercase]{Courier}
        \setmainfont[Ligatures=TeX,Scale=MatchLowercase]{Open Sans}
        \usepackage{truncate}
        \definecolor{DarkAqua}{rgb}{0.000,0.596,0.769}
        \definecolor{NiceBlue}{rgb}{0.267,0.447,0.769}
        \definecolor{NiceDarkBlue}{rgb}{0.086,0.118,0.431}
        \definecolor{NiceVeryDarkBlue}{rgb}{0.059,0.086,0.298}
        \makeatletter
        \ChNumVar{\LARGE\sffamily\bfseries} % sets the style for digit
        \ChTitleVar{\LARGE\sffamily\bfseries} % sets the style for title
        \ChRuleWidth{0pt}
        \patchcmd{\ttl@save@mkchap}{\vspace*{50\p@}}{}{}{}
        \patchcmd{\ttl@save@mkschap}{\vspace*{50\p@}}{\vspace*{10pt}}{}{}
        \patchcmd{\part}{plain}{mypart}{}{}
        \renewcommand{\DOCH}{\CNoV\textcolor{NiceVeryDarkBlue}{\thechapter .}\hspace{0.5em}}
        \renewcommand{\DOTI}[1]{\CTV\textcolor{NiceVeryDarkBlue}{#1}\\ \vspace{1em}}
        \renewcommand{\DOTIS}[1]{\CTV\textcolor{NiceVeryDarkBlue}{#1}}
        \titleformat{\section}{\Large\py@HeaderFamily}%
            {\py@TitleColor\thesection .}{0.5em}{\py@TitleColor}{\py@NormalColor}
        \titleformat{\subsection}{\large\py@HeaderFamily}%
            {\py@TitleColor\thesubsection .}{0.5em}{\py@TitleColor}{\py@NormalColor}
        \titleformat{\subsubsection}{\py@HeaderFamily}%
            {\py@TitleColor\thesubsubsection .}{0.5em}{\py@TitleColor}{\py@NormalColor}

        \AtBeginEnvironment{longtable}{
            \setlist[itemize,1]{nosep, wide=0pt, leftmargin=*, before=\vspace*{-\baselineskip}, after=\vspace*{\dimexpr1ex-\baselineskip-0.5em}}
            \setlist[itemize,2]{leftmargin=*}
        }
        \AtBeginEnvironment{fulllineitems}{
            % Remove space around headings inside function/struct API doc
            \titlespacing*{\subsubsection}{0em}{0em}{0em}
        }
        \newcommand{\titletext}[1]{\sffamily\textcolor{TitleColor}{#1}}
        \newcommand{\headerfootertext}[1]{\sffamily\textcolor{NiceDarkBlue}{#1}}
        \renewcommand{\py@sigparams}[2]{%
            \parbox[t]{\py@argswidth}{\truncate[ ...\sphinxcode{)}]{\py@argswidth}{#1\sphinxcode{)}#2}}}
        \renewcommand{\headrule}{\vspace{-0.7em}\vbox to 0pt{\hbox to\headwidth{%
            \color{NiceBlue}\leaders\hrule height \headrulewidth\hfill}}}
        \renewcommand{\footrule}{\hbox to\headwidth{%
            \color{NiceBlue}\leaders\hrule height \footrulewidth\hfill}}
        \fancypagestyle{mytitle}{
            \renewcommand{\headrulewidth}{0pt}
            \renewcommand{\footrulewidth}{0pt}
            \addtolength{\footskip}{0.8em}
            \fancyfoot[CO]{{\vspace{0.8em}\titletext{\large Confidential and Proprietary. Unauthorized Reproduction Prohibited}}}
            \fancyfoot[LO,RO]{{}}
            \fancyhead{{}}
        }
        \fancypagestyle{normal}{
            \fancyhf{}
            % FIXME: this presupposes "twoside".
            % If "oneside" class option, there are warnings in LaTeX log.
            \fancyfoot[CE,CO]{{\headerfootertext{Page \thepage\qquad\py@release\qquad Confidential and Proprietary | Copyright \textcopyright \ 2024 -- Hailo Technologies Ltd.}}}
            \fancyhead[LE,LO]{{\includegraphics[width=3.5cm]{logo_small.pdf}\qquad\headerfootertext{\@title}}}
            \renewcommand{\headrulewidth}{0.4pt}
            \renewcommand{\footrulewidth}{0.4pt}
            % define chaptermark with \@chappos when \@chappos is available for Japanese
            \ltx@ifundefined{@chappos}{}
            {\def\chaptermark##1{\markboth{\@chapapp\space\thechapter\space\@chappos\space ##1}{}}}
        }
        \fancypagestyle{plain}{
            \fancyhf{}
            \fancyfoot[CE,CO]{{\headerfootertext{Page \thepage\qquad\py@release\qquad Confidential and Proprietary | Copyright \textcopyright \ 2024 -- Hailo Technologies Ltd.}}}
            \fancyhead[LE,LO]{{\includegraphics[width=3.5cm]{logo_small.pdf}\qquad\headerfootertext{\@title}}}
            \renewcommand{\headrulewidth}{0.4pt}
            \renewcommand{\footrulewidth}{0.4pt}
        }
        \fancypagestyle{mypart}{
            \fancyhf{}
            \fancyfoot[CE,CO]{{\headerfootertext{Page \thepage\qquad\py@release\qquad Confidential and Proprietary | Copyright \textcopyright \ 2024 -- Hailo Technologies Ltd.}}}
            \fancyhead[LE,LO]{}
            \renewcommand{\headrulewidth}{0pt}
            \renewcommand{\footrulewidth}{0.4pt}
        }

        \makeatother
        \pagestyle{normal} % See: https://tex.stackexchange.com/questions/407929/thispagestyle-and-pagestyle-with-packages-fancyhdr-and-extramarks-causes-confu
        \taburulecolor{gray!30}
        \def\arraystretch{1.3}
    ''',


    'maketitle': r'''
        \newgeometry{left=1.9cm,right=1.9cm,top=2cm,bottom=0cm}
        \makeatletter
        \let\sphinxrestorepageanchorsetting\relax
        \ifHy@pageanchor\def\sphinxrestorepageanchorsetting{\Hy@pageanchortrue}\fi
        \hypersetup{pageanchor=false}% avoid duplicate destination warnings
        \begin{titlepage}%
            \thispagestyle{mytitle}
            \tikz[remember picture,overlay] \node[inner sep=0pt] at (current page.center){\includegraphics{Hailo_dots.pdf}};
            \let\footnotesize\small
            \let\footnoterule\relax
            \begingroup % for PDF information dictionary
                \def\endgraf{ }\def\and{\& }%
                \pdfstringdefDisableCommands{\def\\{, }}% overwrite hyperref setup
                \hypersetup{pdfauthor={\@author}, pdftitle={\@title}}%
            \endgroup
            \sphinxlogo
            \vfill\vfill
            {\fontsize{28}{10}\selectfont\setmainfont{Open Sans}\textbf{\@title} \par}
            \vspace{0.5cm}
            {\colorbox[rgb]{0.24,0.60,0.78}{\makebox[0.66cm]{\rule{0pt}{0.01cm}}} \par}
            \vspace{0.5cm}
            {\fontsize{12}{3}\selectfont\setmainfont{Open Sans}{\py@release\releaseinfo} \par}
            {\fontsize{12}{3}\selectfont\setmainfont{Open Sans}\textcolor{black}{\@date} \par}
            \vfill\vfill\vfill\vfill
            \@thanks
        \end{titlepage}%
        \setcounter{footnote}{0}%
        \let\thanks\relax\let\maketitle\relax
        %\gdef\@thanks{}\gdef\@author{}\gdef\@title{}
        \clearpage
        \ifdefined\sphinxbackoftitlepage\sphinxbackoftitlepage\fi
        \if@openright\cleardoublepage\else\clearpage\fi
        \sphinxrestorepageanchorsetting
        \makeatother
        \restoregeometry
    ''',


    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',

    # Don't include the index (it looks ugly in the PDF)
    'printindex': '',

    'fncychap': '\\usepackage{fncychap}',

    'sphinxsetup': """InnerLinkColor={rgb}{0.000,0.294,0.400},
                      TitleColor={rgb}{0.059,0.086,0.298},
                      VerbatimColor={rgb}{0.866,0.933,0.933},
                      noteBorderColor={rgb}{0.415,0.690,0.870},
                      warningBorderColor={rgb}{0.941,0.701,0.494},
                      warningBgColor={rgb}{1,0.929,0.8},
                      VerbatimBorderColor={rgb}{0.882,0.894,0.898}""",

    'extraclassoptions': 'openany',

    'passoptionstopackages': r'\PassOptionsToPackage{table}{xcolor}',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (master_doc, f'tappas_v{release}_user_guide.tex', 'TAPPAS User Guide',
     'Hailo Technologies', 'manual'),
]

latex_logo = '../tools/build_tools/tappas_sphinx/_images_src/Hailo_logo_for_A4.pdf'

latex_engine = 'xelatex'


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'tappas', 'TAPPAS User Guide',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'Tappas', 'TAPPAS User Guide',
     author, 'Tappas', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for intersphinx extension ---------------------------------------

# # Example configuration for intersphinx: refer to the Python standard library.
# intersphinx_mapping = {'https://docs.python.org/': None}

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True
